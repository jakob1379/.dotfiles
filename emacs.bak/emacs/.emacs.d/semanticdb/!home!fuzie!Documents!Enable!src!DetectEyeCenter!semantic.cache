;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("EYE_CENTER_H" variable (:constant-flag t) nil [30 42])
            ("dlib/image_io.h" include (:system-flag t) nil [44 70])
            ("dlib/image_processing.h" include (:system-flag t) nil [71 105])
            ("opencv2/highgui/highgui.hpp" include nil nil [107 145])
            ("opencv2/imgproc/imgproc.hpp" include nil nil [146 184])
            ("iostream" include (:system-flag t) nil [210 229])
            ("queue" include (:system-flag t) nil [230 246])
            ("stdio.h" include (:system-flag t) nil [247 265])
            ("Constants.h" include nil nil [266 288])
            ("../helpers.h" include nil nil [289 312])
            ("floodKillEdges" function
               (:prototype-flag t
                :arguments 
                  ( ("mat" variable
                       (:reference 1
                        :type ("cv::Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [357 370]))                  
                :type ("cv::Mat" type (:type "class") nil nil))
                nil [334 371])
            ("findEyeCenter" function
               (:prototype-flag t
                :arguments 
                  ( ("face" variable (:type ("cv::Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [418 431])
                    ("eye" variable (:type ("cv::Rect" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [432 445]))                  
                :type ("cv::Point" type (:type "class") nil nil))
                nil [394 446]))          
      :file "DetectEyeCenter.h"
      :pointmax 454
      :fsize 453
      :lastmodtime '(23442 32545 903750 175000)
      :unmatched-syntax '((symbol 385 . 392) (symbol 380 . 384) (symbol 373 . 379) (punctuation 372 . 373))
      :lexical-table 
        '(("EYE_CENTER_H")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("CREATEEYEREGION_H" variable (:constant-flag t) nil [35 52])
            ("opencv2/opencv.hpp" include (:system-flag t) nil [53 82])
            ("dlib/image_processing.h" include (:system-flag t) nil [83 117])
            ("../helpers.h" include nil nil [118 141])
            ("createEyeRegions" function
               (:prototype-flag t
                :arguments 
                  ( ("landmarks" variable (:type ("std::vector" type
                         (:template-specifier 
                            ( ("cv::Point2f" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [181 216]))                  
                :type ("std::vector" type
                     (:template-specifier 
                        ( ("cv::Rect" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [142 217])
            ("createEyeRegionRect" function
               (:prototype-flag t
                :arguments 
                  ( ("eyeLeftCorner" variable (:type ("cv::Point" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [247 271])
                    ("eyeRightCorner" variable (:type ("cv::Point" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [272 297]))                  
                :type ("cv::Rect" type (:type "class") nil nil))
                nil [218 298])
            ("createRotatedEyeRegionRect" function
               (:prototype-flag t
                :arguments 
                  ( ("eyeLeftCorner" variable (:type ("cv::Point2f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [342 368])
                    ("eyeRightCorner" variable (:type ("cv::Point2f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [369 396]))                  
                :type ("cv::RotatedRect" type (:type "class") nil nil))
                nil [299 397])
            ("createRotatedEyeRegions" function
               (:prototype-flag t
                :arguments 
                  ( ("landmarks" variable (:type ("std::vector" type
                         (:template-specifier 
                            ( ("cv::Point2f" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [451 486]))                  
                :type ("std::vector" type
                     (:template-specifier 
                        ( ("cv::RotatedRect" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [398 487]))          
      :file "CreateEyeRegions.h"
      :pointmax 495
      :fsize 494
      :lastmodtime '(23442 32545 903750 175000)
      :unmatched-syntax nil
      :lexical-table 
        '(("CREATEEYEREGION_H")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("ROTATION_H" variable (:constant-flag t) nil [28 38])
            ("opencv2/highgui/highgui.hpp" include (:system-flag t) nil [39 77])
            ("opencv2/imgproc/imgproc.hpp" include (:system-flag t) nil [78 116])
            ("iostream" include (:system-flag t) nil [117 136])
            ("unturnRect" function
               (:prototype-flag t
                :arguments 
                  ( ("rRect" variable (:type ("cv::RotatedRect" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158 180]))                  
                :type ("cv::Rect" type (:type "class") nil nil))
                nil [138 181])
            ("rotate2d" function
               (:prototype-flag t
                :arguments 
                  ( ("inPoint" variable
                       (:reference 1
                        :constant-flag t
                        :type ("cv::Point2f" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [203 230])
                    ("angRad" variable
                       (:reference 1
                        :constant-flag t
                        :type "double")
                        (reparse-symbol arg-sub-list) [231 252]))                  
                :type ("cv::Point2f" type (:type "class") nil nil))
                nil [182 253])
            ("rotatePoint" function
               (:prototype-flag t
                :arguments 
                  ( ("inPoint" variable
                       (:reference 1
                        :constant-flag t
                        :type ("cv::Point2f" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [278 305])
                    ("center" variable
                       (:reference 1
                        :constant-flag t
                        :type ("cv::Point2f" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [306 332])
                    ("theta" variable
                       (:reference 1
                        :constant-flag t
                        :type "double")
                        (reparse-symbol arg-sub-list) [333 353]))                  
                :type ("cv::Point2f" type (:type "class") nil nil))
                nil [254 354]))          
      :file "RotateRect.h"
      :pointmax 364
      :fsize 363
      :lastmodtime '(23442 32545 903750 175000)
      :unmatched-syntax nil
      :lexical-table 
        '(("ROTATION_H")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("CONSTANTS_H" variable (:constant-flag t) nil [29 40])
            ("kPlotVectorField" variable
               (:constant-flag t
                :default-value "false"
                :type "bool")
                nil [56 92])
            ("kEyePercentTop" variable
               (:constant-flag t
                :default-value "25"
                :type "int")
                nil [112 142])
            ("kEyePercentSide" variable
               (:constant-flag t
                :default-value "13"
                :type "int")
                nil [143 174])
            ("kEyePercentHeight" variable
               (:constant-flag t
                :default-value "30"
                :type "int")
                nil [175 208])
            ("kEyePercentWidth" variable
               (:constant-flag t
                :default-value "35"
                :type "int")
                nil [209 241])
            ("kSmoothFaceImage" variable
               (:constant-flag t
                :default-value "false"
                :type "bool")
                nil [260 296])
            ("kSmoothFaceFactor" variable
               (:constant-flag t
                :default-value "0.005"
                :type "float")
                nil [297 335])
            ("kFastEyeWidth" variable
               (:constant-flag t
                :default-value "50"
                :type "int")
                nil [361 390])
            ("kWeightBlurSize" variable
               (:constant-flag t
                :default-value "5"
                :type "int")
                nil [391 421])
            ("kEnableWeight" variable
               (:constant-flag t
                :default-value "true"
                :type "bool")
                nil [422 454])
            ("kWeightDivisor" variable
               (:constant-flag t
                :default-value "1.0"
                :type "float")
                nil [455 488])
            ("kGradientThreshold" variable
               (:constant-flag t
                :default-value "50.0"
                :type "double")
                nil [489 528])
            ("kEnablePostProcess" variable
               (:constant-flag t
                :default-value "true"
                :type "bool")
                nil [548 585])
            ("kPostProcessThreshold" variable
               (:constant-flag t
                :default-value "0.97"
                :type "float")
                nil [586 627])
            ("kEnableEyeCorner" variable
               (:constant-flag t
                :default-value "false"
                :type "bool")
                nil [643 679]))          
      :file "Constants.h"
      :pointmax 688
      :fsize 687
      :lastmodtime '(23442 32545 903750 175000)
      :unmatched-syntax nil
      :lexical-table 
        '(("CONSTANTS_H")
          )
))
  :file "!home!fuzie!Documents!Enable!src!DetectEyeCenter!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
