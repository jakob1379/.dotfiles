;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("argparse" include nil nil [1 16])
            ("os" include nil nil [17 26])
            ("shutil" include nil nil [27 40])
            ("math" include nil nil [41 58])
            ("time" include nil nil [41 58])
            ("collections" include nil nil [59 94])
            ("torch" include nil nil [95 107])
            ("torch.nn" include nil nil [108 129])
            ("torch.nn.parallel" include nil nil [130 154])
            ("torch.backends.cudnn" include nil nil [155 191])
            ("torch.optim" include nil nil [192 210])
            ("torch.utils.data" include nil nil [211 234])
            ("torchvision.transforms" include nil nil [235 278])
            ("torchvision.datasets" include nil nil [279 318])
            ("torchvision.models" include nil nil [319 354])
            ("numpy" include nil nil [355 373])
            ("torch.utils.model_zoo" include nil nil [374 415])
            ("torch.autograd.variable" include nil nil [416 460])
            ("'''
Pytorch model for the iTracker.

Author: Petr Kellnhofer ( pkel_lnho (at) gmai_l.com // remove underscores and spaces), 2018. 

Website: http://gazecapture.csail.mit.edu/

Cite:

Eye Tracking for Everyone
K.Krafka*, A. Khosla*, P. Kellnhofer, H. Kannan, S. Bhandarkar, W. Matusik and A. Torralba
IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2016

@inproceedings{cvpr2016_gazecapture,
Author = {Kyle Krafka and Aditya Khosla and Petr Kellnhofer and Harini Kannan and Suchendra Bhandarkar and Wojciech Matusik and Antonio Torralba},
Title = {Eye Tracking for Everyone},
Year = {2016},
Booktitle = {IEEE Conference on Computer Vision and Pattern Recognition (CVPR)}
}

'''" code nil nil [462 1157])
            ("ItrackerImageModel" type
               (:superclasses ("nn.Module")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [1311 1353])
                            ("self" variable nil (reparse-symbol indented_block_body) [1362 2178]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1296 1300]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1283 2179])
                    ("forward" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2196 2200])
                            ("x" variable nil (reparse-symbol function_parameters) [2202 2203]))                          )
                        (reparse-symbol indented_block_body) [2184 2286]))                  
                :type "class")
                nil [1160 2286])
            ("FaceImageModel" type
               (:superclasses ("nn.Module")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [2357 2395])
                            ("self" variable nil (reparse-symbol indented_block_body) [2428 2460])
                            ("self" variable nil (reparse-symbol indented_block_body) [2469 2695]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2342 2346]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [2329 2696])
                    ("forward" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2713 2717])
                            ("x" variable nil (reparse-symbol function_parameters) [2719 2720]))                          )
                        (reparse-symbol indented_block_body) [2701 2788]))                  
                :type "class")
                nil [2287 2788])
            ("FaceGridModel" type
               (:superclasses ("nn.Module")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [2906 2943])
                            ("self" variable nil (reparse-symbol indented_block_body) [2952 3190]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2876 2880])
                            ("gridSize" variable nil (reparse-symbol function_parameters) [2882 2890]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [2863 3191])
                    ("forward" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3208 3212])
                            ("x" variable nil (reparse-symbol function_parameters) [3214 3215]))                          )
                        (reparse-symbol indented_block_body) [3196 3292]))                  
                :type "class")
                nil [2789 3292])
            ("ITrackerModel" type
               (:superclasses ("nn.Module")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [3359 3396])
                            ("self" variable nil (reparse-symbol indented_block_body) [3405 3441])
                            ("self" variable nil (reparse-symbol indented_block_body) [3450 3483])
                            ("self" variable nil (reparse-symbol indented_block_body) [3492 3524])
                            ("self" variable nil (reparse-symbol indented_block_body) [3561 3678])
                            ("self" variable nil (reparse-symbol indented_block_body) [3716 3860]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3344 3348]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [3331 3861])
                    ("forward" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3878 3882])
                            ("faces" variable nil (reparse-symbol function_parameters) [3884 3889])
                            ("eyesLeft" variable nil (reparse-symbol function_parameters) [3891 3899])
                            ("eyesRight" variable nil (reparse-symbol function_parameters) [3901 3910])
                            ("faceGrids" variable nil (reparse-symbol function_parameters) [3912 3921]))                          )
                        (reparse-symbol indented_block_body) [3866 4341]))                  
                :type "class")
                nil [3295 4341]))          
      :file "ITrackerModel.py"
      :pointmax 4341
      :fsize 4340
      :lastmodtime '(23524 783 426151 488000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("torch.utils.data" include nil nil [1 32])
            ("scipy.io" include nil nil [33 55])
            ("PIL" include nil nil [56 77])
            ("os" include nil nil [78 87])
            ("os.path" include nil nil [88 102])
            ("torchvision.transforms" include nil nil [103 146])
            ("torch" include nil nil [147 159])
            ("numpy" include nil nil [160 178])
            ("re" include nil nil [179 188])
            ("'''
Data loader for the iTracker.
Modify to fit your data format.

Author: Petr Kellnhofer ( pkel_lnho (at) gmai_l.com // remove underscores and spaces), 2018. 

Website: http://gazecapture.csail.mit.edu/

Cite:

Eye Tracking for Everyone
K.Krafka*, A. Khosla*, P. Kellnhofer, H. Kannan, S. Bhandarkar, W. Matusik and A. Torralba
IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2016

@inproceedings{cvpr2016_gazecapture,
Author = {Kyle Krafka and Aditya Khosla and Petr Kellnhofer and Harini Kannan and Suchendra Bhandarkar and Wojciech Matusik and Antonio Torralba},
Title = {Eye Tracking for Everyone},
Year = {2016},
Booktitle = {IEEE Conference on Computer Vision and Pattern Recognition (CVPR)}
}

'''" code nil nil [190 915])
            ("DATASET_PATH" variable nil nil [917 943])
            ("MEAN_PATH" variable nil nil [944 960])
            ("META_PATH" variable nil nil [961 989])
            ("loadMetadata" function (:arguments 
              ( ("filename" variable nil (reparse-symbol function_parameters) [1008 1016])
                ("silent" variable nil (reparse-symbol function_parameters) [1018 1024]))              ) nil [991 1456])
            ("SubtractMean" type
               (:documentation "Normalize a tensor image with mean.
    "
                :superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1578 1623]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1554 1558])
                            ("meanImg" variable nil (reparse-symbol function_parameters) [1560 1567]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1541 1624])
                    ("__call__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1642 1646])
                            ("tensor" variable nil (reparse-symbol function_parameters) [1648 1654]))                          
                        :documentation "
        Args:
            tensor (Tensor): Tensor image of size (C, H, W) to be normalized.
        Returns:
            Tensor: Normalized image.
        ")
                        (reparse-symbol indented_block_body) [1629 1875]))                  
                :type "class")
                nil [1457 1875])
            ("ITrackerData" type
               (:superclasses ("data.Dataset")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1998 2018])
                            ("self" variable nil (reparse-symbol indented_block_body) [2027 2051])
                            ("print" code nil (reparse-symbol indented_block_body) [2061 2097])
                            ("self" variable nil (reparse-symbol indented_block_body) [2106 2145])
                            ("self" variable nil (reparse-symbol indented_block_body) [2154 2242])
                            ("self" variable nil (reparse-symbol indented_block_body) [2251 2342])
                            ("self" variable nil (reparse-symbol indented_block_body) [2351 2444])
                            ("self" variable nil (reparse-symbol indented_block_body) [2463 2642])
                            ("self" variable nil (reparse-symbol indented_block_body) [2651 2833])
                            ("self" variable nil (reparse-symbol indented_block_body) [2842 3025])
                            ("if" code nil (reparse-symbol indented_block_body) [3036 3237])
                            ("self" variable nil (reparse-symbol indented_block_body) [3246 3283])
                            ("print" code nil (reparse-symbol indented_block_body) [3292 3383]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1928 1932])
                            ("split" variable nil (reparse-symbol function_parameters) [1934 1939])
                            ("imSize" variable nil (reparse-symbol function_parameters) [1951 1957])
                            ("gridSize" variable nil (reparse-symbol function_parameters) [1969 1977]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1915 3384])
                    ("loadImage" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3403 3407])
                            ("path" variable nil (reparse-symbol function_parameters) [3409 3413]))                          )
                        (reparse-symbol indented_block_body) [3389 3642])
                    ("makeGrid" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3661 3665])
                            ("params" variable nil (reparse-symbol function_parameters) [3667 3673]))                          )
                        (reparse-symbol indented_block_body) [3648 4188])
                    ("__getitem__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4209 4213])
                            ("index" variable nil (reparse-symbol function_parameters) [4215 4220]))                          )
                        (reparse-symbol indented_block_body) [4193 5388])
                    ("__len__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5418 5422]))                          )
                        (reparse-symbol indented_block_body) [5406 5458]))                  
                :type "class")
                nil [1877 5458]))          
      :file "ITrackerData.py"
      :pointmax 5458
      :fsize 5457
      :lastmodtime '(23523 63851 739916 186000)
      :unmatched-syntax nil))
  :file "!home!fuzie!Documents!GazeCapture!pytorch!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
