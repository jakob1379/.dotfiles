;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("DetectGestures.h" include nil nil [1 28])
            ("string" include (:system-flag t) nil [29 46])
            ("cmath" include (:system-flag t) nil [47 63])
            ("algorithm" include (:system-flag t) nil [64 84])
            ("MAX_GESTURE_WAIT" variable (:constant-flag t) nil [94 110])
            ("gestureConfig" variable
               (:typemodifiers ("extern")
                :type ("GestureConfig" type (:type "class") nil nil))
                nil [136 171])
            ("cosScale" function
               (:prototype-flag t
                :arguments 
                  ( ("x" variable (:type "double") (reparse-symbol arg-sub-list) [246 255]))                  
                :type "double")
                nil [230 256])
            ("yScale" function
               (:prototype-flag t
                :arguments 
                  ( ("y" variable (:type "double") (reparse-symbol arg-sub-list) [271 280]))                  
                :type "double")
                nil [257 281])
            ("directionMarker" variable
               (:default-value "\"NONE\""
                :type ("std::string" type (:type "class") nil nil))
                nil [283 320])
            ("start" variable
               (:typemodifiers ("extern")
                :type ("std::chrono::time_point" type
                     (:template-specifier 
                        ( ("std::chrono::system_clock" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [322 386])
            ("previousTimeRight" variable (:type "int") nil [388 410])
            ("previousTimeLeft" variable (:type "int") nil [411 432])
            ("previousTimeUp" variable (:type "int") nil [433 452])
            ("previousTimeDown" variable (:type "int") nil [453 474])
            ("leftPupilVector" variable (:type ("std::vector" type
                 (:template-specifier 
                    ( ("cv::Point2d" type nil nil nil))                    
                  :type "class")
                  nil nil)) nil [476 517])
            ("rightPupilVector" variable (:type ("std::vector" type
                 (:template-specifier 
                    ( ("cv::Point2d" type nil nil nil))                    
                  :type "class")
                  nil nil)) nil [518 560])
            ("timeVector" variable (:type ("std::vector" type
                 (:template-specifier 
                    ( ("int" type nil nil nil))                    
                  :type "class")
                  nil nil)) nil [561 589])
            ("MAX_PUPIL_COORDINATES_STORED" variable
               (:default-value "20"
                :type "int")
                nil [591 629])
            ("D_LEFT_MIN" variable (:type "double") nil [630 648])
            ("MAX_LEFT_X" variable (:type "double") nil [649 667])
            ("MIN_LEFT_X" variable (:type "double") nil [668 686])
            ("D_THRESHOLD" variable (:type "double") nil [687 706])
            ("SOBEL_THRESHOLD" variable (:type "double") nil [707 730])
            ("D_PEAK_TIME" variable (:type "int") nil [731 747])
            ("GESTURE_AVERAGE_TIME" variable
               (:default-value "1000"
                :type "double")
                nil [748 783])
            ("gesture" variable (:type ("Gesture" type (:type "class") nil nil)) nil [785 801])
            ("count" variable
               (:default-value "0"
                :type "int")
                nil [802 816])
            ("determineAction" function
               (:arguments 
                  ( ("leftPupil" variable (:type ("cv::Point" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1082 1102])
                    ("rightPupil" variable (:type ("cv::Point" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1103 1124])
                    ("leftPupilRegion" variable (:type ("cv::Rect" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1132 1157])
                    ("rightPupilRegion" variable (:type ("cv::Rect" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1158 1184]))                  
                :type "void")
                nil [1061 1558])
            ("determineAction" function
               (:arguments 
                  ( ("pupil" variable (:type ("cv::Point" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1582 1598])
                    ("pupilRegion" variable (:type ("cv::Rect" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1599 1620]))                  
                :type "void")
                nil [1561 1874])
            ("detectGesture" function
               (:arguments 
                  ( ("leftPupil" variable
                       (:constant-flag t
                        :type ("cv::Point2d" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2045 2073])
                    ("rightPupil" variable
                       (:constant-flag t
                        :type ("cv::Point2d" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2074 2103]))                  
                :type "void")
                nil [2026 10193])
            ("detectGesture" function
               (:arguments 
                  ( ("pupil" variable
                       (:constant-flag t
                        :type ("cv::Point2d" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10215 10239]))                  
                :type "void")
                nil [10196 16569])
            ("cosScale" function
               (:arguments 
                  ( ("x" variable (:type "double") (reparse-symbol arg-sub-list) [16714 16723]))                  
                :type "double")
                nil [16698 16846])
            ("yScale" function
               (:arguments 
                  ( ("y" variable (:type "double") (reparse-symbol arg-sub-list) [16862 16871]))                  
                :type "double")
                nil [16848 17122])
            ("calculatePupilPointVectorSize" function
               (:arguments 
                  ( ("frameInterval" variable (:type "double") (reparse-symbol arg-sub-list) [17158 17179]))                  
                :type "int")
                nil [17124 17300])
            ("normalizePupilCoordinate" function
               (:arguments 
                  ( ("pupil" variable (:type ("cv::Point" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17434 17450])
                    ("pupilRegion" variable
                       (:constant-flag t
                        :type ("cv::Rect" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17451 17478]))                  
                :type ("cv::Point" type (:type "class") nil nil))
                nil [17399 17645])
            ("storePupilCoordinate" function
               (:arguments 
                  ( ("pupils" variable (:type ("std::vector" type
                         (:template-specifier 
                            ( ("cv::Point2d" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [17693 17725])
                    ("pupil" variable
                       (:constant-flag t
                        :type ("cv::Point2d" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17726 17750]))                  
                :type ("std::vector" type
                     (:template-specifier 
                        ( ("cv::Point2d" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [17647 17899])
            ("storeTimeStamp" function
               (:arguments 
                  ( ("times" variable (:type ("std::vector" type
                         (:template-specifier 
                            ( ("int" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [17933 17956])
                    ("currentTime" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol arg-sub-list) [17957 17979]))                  
                :type ("std::vector" type
                     (:template-specifier 
                        ( ("int" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [17901 18129])
            ("getSingleCoordinateVectorFromPoints" function
               (:arguments 
                  ( ("pupilArray" variable
                       (:constant-flag t
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("cv::Point2d" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [18348 18390])
                    ("valueOfX" variable (:type "bool") (reparse-symbol arg-sub-list) [18391 18405]))                  
                :type ("std::vector" type
                     (:template-specifier 
                        ( ("double" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [18292 18698])
            ("isBlinkDetected" function
               (:arguments 
                  ( ("leftPupil" variable
                       (:constant-flag t
                        :type ("cv::Point" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18721 18747])
                    ("rightPupil" variable
                       (:constant-flag t
                        :type ("cv::Point" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18747 18774]))                  
                :type "bool")
                nil [18700 19004])
            ("isBlinkDetected" function
               (:arguments 
                  ( ("pupil" variable
                       (:constant-flag t
                        :type ("cv::Point" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19027 19049]))                  
                :type "bool")
                nil [19006 19228])
            ("isRight" function
               (:arguments 
                  ( ("dx" variable
                       (:constant-flag t
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("int" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [19259 19285]))                  
                :type ("std::tuple" type
                     (:template-specifier 
                        ( ("bool" type nil nil nil)
                          ("int" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [19230 19746])
            ("isLeft" function
               (:arguments 
                  ( ("dx" variable
                       (:constant-flag t
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("int" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [19777 19803]))                  
                :type ("std::tuple" type
                     (:template-specifier 
                        ( ("bool" type nil nil nil)
                          ("int" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [19749 20324])
            ("detectBlink" function
               (:arguments 
                  ( ("landmarks" variable
                       (:constant-flag t
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("cv::Point2f" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [20345 20386]))                  
                :type "bool")
                nil [20328 20851])
            ("EAR" function
               (:arguments 
                  ( ("landmarks" variable
                       (:constant-flag t
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("cv::Point2f" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [20864 20905]))                  
                :type "double")
                nil [20853 21146])
            ("flush" function (:type "void") nil [21148 21231]))          
      :file "DetectGestures.cpp"
      :pointmax 21231
      :fsize 21146
      :lastmodtime '(23479 21663 19670 123000)
      :unmatched-syntax nil
      :lexical-table 
        '(("MAX_GESTURE_WAIT" . ((number "2000" 111 . 115)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("Gesture.h" include nil nil [1 21])
            ("faceClass" variable
               (:typemodifiers ("extern")
                :type ("FaceClass" type (:type "class") nil nil))
                nil [23 50])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [52 72])
            ("Gesture" function
               (:constructor-flag t
                :parent "Gesture"
                :type ("Gesture" type (:type "class") nil nil))
                nil [253 341])
            ("SetDirection" function
               (:parent "Gesture"
                :arguments 
                  ( ("data" variable
                       (:pointer 1
                        :type ("GestureData" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [474 492]))                  
                :type "void")
                nil [447 1803])
            ("Halt" function
               (:parent "Gesture"
                :type "void")
                nil [1862 2401])
            ("STATE_DEFINE" function
               (:arguments 
                  ( ("" variable (:type ("Gesture" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2469 2477])
                    ("" variable (:type ("Idle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2478 2483])
                    ("" variable (:type ("NoEventData" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2484 2496]))                  
                :type "int")
                nil [2456 2543])
            ("STATE_DEFINE" function
               (:arguments 
                  ( ("" variable (:type ("Gesture" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2576 2584])
                    ("" variable (:type ("Stop" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2585 2590])
                    ("" variable (:type ("NoEventData" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2591 2603]))                  
                :type "int")
                nil [2563 2845])
            ("STATE_DEFINE" function
               (:arguments 
                  ( ("" variable (:type ("Gesture" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2886 2894])
                    ("" variable (:type ("StartRight" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2895 2906])
                    ("" variable (:type ("GestureData" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2907 2919]))                  
                :type "int")
                nil [2873 3144])
            ("STATE_DEFINE" function
               (:arguments 
                  ( ("" variable (:type ("Gesture" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3159 3167])
                    ("" variable (:type ("StartLeft" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3168 3178])
                    ("" variable (:type ("GestureData" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3179 3191]))                  
                :type "int")
                nil [3146 3415])
            ("STATE_DEFINE" function
               (:arguments 
                  ( ("" variable (:type ("Gesture" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3482 3490])
                    ("" variable (:type ("WaitForLeft" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3491 3503])
                    ("" variable (:type ("GestureData" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3504 3516]))                  
                :type "int")
                nil [3469 3764])
            ("STATE_DEFINE" function
               (:arguments 
                  ( ("" variable (:type ("Gesture" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3779 3787])
                    ("" variable (:type ("WaitForRight" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3788 3801])
                    ("" variable (:type ("GestureData" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3802 3814]))                  
                :type "int")
                nil [3766 4063])
            ("STATE_DEFINE" function
               (:arguments 
                  ( ("" variable (:type ("Gesture" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4078 4086])
                    ("" variable (:type ("GestureAccepted" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4087 4103])
                    ("" variable (:type ("GestureData" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4104 4116]))                  
                :type "int")
                nil [4065 4327]))          
      :file "Gesture.cpp"
      :pointmax 4328
      :fsize 4302
      :lastmodtime '(23477 45616 907287 605000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("StateMachine.h" include nil nil [1 26])
            ("StateMachine" function
               (:constructor-flag t
                :parent "StateMachine"
                :arguments 
                  ( ("maxStates" variable (:type ("BYTE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [384 399])
                    ("initialState" variable (:type ("BYTE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [400 418]))                  
                :type ("StateMachine" type (:type "class") nil nil))
                nil [357 587])
            ("ExternalEvent" function
               (:parent "StateMachine"
                :arguments 
                  ( ("newState" variable (:type ("BYTE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [913 927])
                    ("pData" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("EventData" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [928 951]))                  
                :type "void")
                nil [880 1573])
            ("InternalEvent" function
               (:parent "StateMachine"
                :arguments 
                  ( ("newState" variable (:type ("BYTE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1899 1913])
                    ("pData" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("EventData" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1914 1937]))                  
                :type "void")
                nil [1866 2064])
            ("StateEngine" function
               (:parent "StateMachine"
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [2331 2336]))                  
                :type "void")
                nil [2300 2579])
            ("StateEngine" function
               (:parent "StateMachine"
                :arguments 
                  ( ("pStateMap" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("StateMapRow" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2864 2899]))                  
                :type "void")
                nil [2833 3960])
            ("StateEngine" function
               (:parent "StateMachine"
                :arguments 
                  ( ("pStateMapEx" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("StateMapRowEx" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4249 4288]))                  
                :type "void")
                nil [4218 6217]))          
      :file "StateMachine.cpp"
      :pointmax 6221
      :fsize 6220
      :lastmodtime '(23442 32545 903750 175000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("DETERMINE_ACTION_H" variable (:constant-flag t) nil [36 54])
            ("dlib/image_io.h" include (:system-flag t) nil [55 81])
            ("opencv2/highgui/highgui.hpp" include nil nil [82 120])
            ("opencv2/imgproc/imgproc.hpp" include nil nil [121 159])
            ("iostream" include (:system-flag t) nil [161 180])
            ("queue" include (:system-flag t) nil [181 197])
            ("stdio.h" include (:system-flag t) nil [198 216])
            ("cmath" include (:system-flag t) nil [217 233])
            ("cstdio" include (:system-flag t) nil [234 251])
            ("vector" include (:system-flag t) nil [252 269])
            ("iostream" include (:system-flag t) nil [270 289])
            ("algorithm" include (:system-flag t) nil [290 310])
            ("iomanip" include (:system-flag t) nil [311 329])
            ("numeric" include (:system-flag t) nil [330 348])
            ("tuple" include (:system-flag t) nil [349 365])
            ("Gesture.h" include nil nil [367 387])
            ("../FaceClass.h" include nil nil [388 413])
            ("GestureConfig.h" include nil nil [414 440])
            ("determineAction" function
               (:prototype-flag t
                :arguments 
                  ( ("leftPupil" variable (:type ("cv::Point" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [463 483])
                    ("rightPupil" variable (:type ("cv::Point" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [484 505])
                    ("leftPupilRegion" variable (:type ("cv::Rect" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [512 537])
                    ("rightPupilRegion" variable (:type ("cv::Rect" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [538 564]))                  
                :type "void")
                nil [442 565])
            ("determineAction" function
               (:prototype-flag t
                :arguments 
                  ( ("pupil" variable (:type ("cv::Point" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [587 603])
                    ("pupilRegion" variable (:type ("cv::Rect" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [604 625]))                  
                :type "void")
                nil [566 626])
            ("storePupilCoordinate" function
               (:prototype-flag t
                :arguments 
                  ( ("pupils" variable (:type ("std::vector" type
                         (:template-specifier 
                            ( ("cv::Point2d" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [673 705])
                    ("pupil" variable
                       (:constant-flag t
                        :type ("cv::Point2d" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [706 730]))                  
                :type ("std::vector" type
                     (:template-specifier 
                        ( ("cv::Point2d" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [627 731])
            ("storeTimeStamp" function
               (:prototype-flag t
                :arguments 
                  ( ("times" variable (:type ("std::vector" type
                         (:template-specifier 
                            ( ("int" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [764 787])
                    ("currentTime" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol arg-sub-list) [788 810]))                  
                :type ("std::vector" type
                     (:template-specifier 
                        ( ("int" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [732 811])
            ("normalizePupilCoordinate" function
               (:prototype-flag t
                :arguments 
                  ( ("pupil" variable (:type ("cv::Point" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [847 863])
                    ("pupilRegion" variable
                       (:constant-flag t
                        :type ("cv::Rect" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [864 891]))                  
                :type ("cv::Point" type (:type "class") nil nil))
                nil [812 892])
            ("getSingleCoordinateVectorFromPoints" function
               (:prototype-flag t
                :arguments 
                  ( ("pupilArray" variable
                       (:constant-flag t
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("cv::Point2d" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [949 991])
                    ("valueOfX" variable (:type "bool") (reparse-symbol arg-sub-list) [992 1006]))                  
                :type ("std::vector" type
                     (:template-specifier 
                        ( ("double" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [893 1007])
            ("detectBlink" function
               (:prototype-flag t
                :arguments 
                  ( ("landmarks" variable
                       (:constant-flag t
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("cv::Point2f" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1025 1066]))                  
                :type "bool")
                nil [1008 1067])
            ("EAR" function
               (:prototype-flag t
                :arguments 
                  ( ("landmarks" variable
                       (:constant-flag t
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("cv::Point2f" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1079 1120]))                  
                :type "double")
                nil [1068 1121])
            ("isBlinkDetected" function
               (:prototype-flag t
                :arguments 
                  ( ("leftPupil" variable
                       (:constant-flag t
                        :type ("cv::Point" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1144 1170])
                    ("rightPupil" variable
                       (:constant-flag t
                        :type ("cv::Point" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1171 1198]))                  
                :type "bool")
                nil [1122 1199])
            ("isBlinkDetected" function
               (:prototype-flag t
                :arguments 
                  ( ("pupil" variable
                       (:constant-flag t
                        :type ("cv::Point" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1221 1243]))                  
                :type "bool")
                nil [1200 1244])
            ("calculatePupilPointVectorSize" function
               (:prototype-flag t
                :arguments 
                  ( ("frameInterval" variable (:type "double") (reparse-symbol arg-sub-list) [1279 1300]))                  
                :type "int")
                nil [1245 1301])
            ("detectGesture" function
               (:prototype-flag t
                :arguments 
                  ( ("leftPupil" variable
                       (:constant-flag t
                        :type ("cv::Point2d" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1321 1349])
                    ("rightPupil" variable
                       (:constant-flag t
                        :type ("cv::Point2d" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1350 1379]))                  
                :type "void")
                nil [1302 1380])
            ("detectGesture" function
               (:prototype-flag t
                :arguments 
                  ( ("pupil" variable
                       (:constant-flag t
                        :type ("cv::Point2d" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1400 1424]))                  
                :type "void")
                nil [1381 1425])
            ("isRight" function
               (:prototype-flag t
                :arguments 
                  ( ("dx" variable
                       (:constant-flag t
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("int" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1455 1481]))                  
                :type ("std::tuple" type
                     (:template-specifier 
                        ( ("bool" type nil nil nil)
                          ("int" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [1426 1482])
            ("isLeft" function
               (:prototype-flag t
                :arguments 
                  ( ("dx" variable
                       (:constant-flag t
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("int" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1511 1537]))                  
                :type ("std::tuple" type
                     (:template-specifier 
                        ( ("bool" type nil nil nil)
                          ("int" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [1483 1538]))          
      :file "DetectGestures.h"
      :pointmax 1547
      :fsize 1546
      :lastmodtime '(23479 21468 692707 860000)
      :unmatched-syntax nil
      :lexical-table 
        '(("DETERMINE_ACTION_H")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("_GESTURE_H" variable (:constant-flag t) nil [28 38])
            ("StateMachine.h" include nil nil [40 65])
            ("string" include (:system-flag t) nil [66 83])
            ("iostream" include (:system-flag t) nil [84 103])
            ("../FaceClass.h" include nil nil [104 129])
            ("GestureData" type
               (:superclasses 
                  ( ("EventData" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [171 178])
                    ("direction" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [180 202]))                  
                :type "class")
                nil [132 205])
            ("Gesture" type
               (:superclasses 
                  ( ("StateMachine" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [245 252])
                    ("Gesture" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("Gesture" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [254 264])
                    ("SetDirection" function
                       (:prototype-flag t
                        :arguments 
                          ( ("data" variable
                               (:pointer 1
                                :type ("GestureData" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [333 351]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [315 352])
                    ("Halt" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [354 366])
                    ("public" label nil (reparse-symbol classsubparts) [368 375])
                    ("m_gestureDirection" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [377 408])
                    ("States" type
                       (:members 
                          ( ("ST_IDLE" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [523 531])
                            ("ST_STOP" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [534 542])
                            ("ST_START_RIGHT" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [545 560])
                            ("ST_START_LEFT" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [563 577])
                            ("ST_WAIT_FOR_LEFT" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [580 597])
                            ("ST_WAIT_FOR_RIGHT" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [600 618])
                            ("ST_GESTURE_ACCEPTED" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [621 641])
                            ("ST_MAX_STATES" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [644 660]))                          
                        :type "enum")
                        (reparse-symbol classsubparts) [506 661]))                  
                :type "class")
                nil [207 1414]))          
      :file "Gesture.h"
      :pointmax 1423
      :fsize 1422
      :lastmodtime '(23442 32545 903750 175000)
      :unmatched-syntax '((symbol 1398 . 1411) (semantic-list 1378 . 1396) (symbol 1363 . 1378) (punctuation 1379 . 1380) (semantic-list 1346 . 1361) (symbol 1331 . 1346) (punctuation 1347 . 1348) (semantic-list 1315 . 1329) (symbol 1300 . 1315) (punctuation 1316 . 1317) (semantic-list 1286 . 1298) (symbol 1271 . 1286) (punctuation 1287 . 1288) (semantic-list 1256 . 1269) (symbol 1241 . 1256) (punctuation 1257 . 1258) (semantic-list 1232 . 1239) (symbol 1217 . 1232) (punctuation 1233 . 1234) (semantic-list 1208 . 1215) (symbol 1193 . 1208) (punctuation 1209 . 1210) (symbol 1176 . 1191) (punctuation 1209 . 1210) (semantic-list 1040 . 1080) (symbol 1027 . 1040) (semantic-list 988 . 1025) (symbol 975 . 988) (semantic-list 936 . 973) (symbol 923 . 936) (semantic-list 886 . 921) (symbol 873 . 886) (semantic-list 835 . 871) (symbol 822 . 835) (semantic-list 789 . 820) (symbol 776 . 789) (semantic-list 743 . 774) (symbol 730 . 743))
      :lexical-table 
        '(("_GESTURE_H")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("_GESTURE_CONFIG_H" variable (:constant-flag t) nil [35 52])
            ("GestureConfig" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [78 85])
                    ("MAX_PUPIL_COORDINATES_STORED" variable
                       (:default-value "3"
                        :type "int")
                        (reparse-symbol classsubparts) [90 127])
                    ("D_LEFT_MIN" variable
                       (:default-value "15.0"
                        :type "double")
                        (reparse-symbol classsubparts) [132 157])
                    ("MAX_LEFT_X" variable
                       (:default-value "52.5"
                        :type "double")
                        (reparse-symbol classsubparts) [162 187])
                    ("MIN_LEFT_X" variable
                       (:default-value "32.0"
                        :type "double")
                        (reparse-symbol classsubparts) [192 217])
                    ("D_THRESHOLD" variable
                       (:default-value "0.01"
                        :type "double")
                        (reparse-symbol classsubparts) [222 248])
                    ("SOBEL_THRESHOLD" variable
                       (:default-value "0.01"
                        :type "double")
                        (reparse-symbol classsubparts) [253 283])
                    ("EAR_THRESHOLD" variable
                       (:default-value "0.26"
                        :type "double")
                        (reparse-symbol classsubparts) [288 316])
                    ("D_PEAK_TIME" variable
                       (:default-value "300"
                        :type "int")
                        (reparse-symbol classsubparts) [321 343])
                    ("configureGestures" function
                       (:prototype-flag t
                        :arguments 
                          ( ("dLeftMin" variable (:type "double") (reparse-symbol arg-sub-list) [372 388])
                            ("maxLeftX" variable (:type "double") (reparse-symbol arg-sub-list) [389 405])
                            ("minLeftX" variable (:type "double") (reparse-symbol arg-sub-list) [406 422])
                            ("dThreshold" variable (:type "double") (reparse-symbol arg-sub-list) [423 441])
                            ("sobelThreshold" variable (:type "double") (reparse-symbol arg-sub-list) [442 464])
                            ("earThreshold" variable (:type "double") (reparse-symbol arg-sub-list) [465 485])
                            ("dPeakTime" variable (:type "int") (reparse-symbol arg-sub-list) [486 500]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [349 501]))                  
                :type "class")
                nil [54 504])
            ("gestureConfig" variable
               (:typemodifiers ("extern")
                :type ("GestureConfig" type (:type "class") nil nil))
                nil [506 541]))          
      :file "GestureConfig.h"
      :pointmax 549
      :fsize 548
      :lastmodtime '(23479 20946 818213 486000)
      :unmatched-syntax nil
      :lexical-table 
        '(("_GESTURE_CONFIG_H")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("_STATE_MACHINE_H" variable (:constant-flag t) nil [34 50])
            ("DataTypes.h" include nil nil [52 74])
            ("stdio.h" include (:system-flag t) nil [75 93])
            ("typeinfo" include (:system-flag t) nil [94 113])
            ("Fault.h" include nil nil [114 132])
            ("EventData" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [1055 1062])
                    ("EventData" function
                       (:destructor-flag t
                        :typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [1064 1087]))                  
                :type "class")
                nil [1037 1104])
            ("NoEventData" type
               (:typedef ("EventData" type (:type "class") nil nil)
                :type "typedef")
                nil [1106 1136])
            ("StateMachine" type
               (:prototype t
                :type "class")
                nil [1138 1157])
            ("StateBase" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [1244 1251])
                    ("InvokeStateAction" function
                       (:pure-virtual-flag t
                        :prototype-flag t
                        :methodconst-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("sm" variable
                               (:pointer 1
                                :type ("StateMachine" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1532 1549])
                            ("data" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("EventData" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1550 1572]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1501 1583]))                  
                :type "class")
                nil [1226 1586])
            ("StateAction" type
               (:template 
                  ( ("SM" type (:type "class") nil nil)
                    ("Data" type (:type "class") nil nil)
                    ("void" type nil nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [1879 1886])
                    ("InvokeStateAction" function
                       (:methodconst-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("sm" variable
                               (:pointer 1
                                :type ("StateMachine" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1958 1975])
                            ("data" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("EventData" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1976 1998]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1927 2817]))                  
                :superclasses 
                  ( ("StateBase" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [1777 2820])
            ("GuardBase" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [2915 2922])
                    ("InvokeGuardCondition" function
                       (:pure-virtual-flag t
                        :prototype-flag t
                        :methodconst-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("sm" variable
                               (:pointer 1
                                :type ("StateMachine" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3332 3349])
                            ("data" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("EventData" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3350 3372]))                          
                        :type ("BOOL" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3298 3383]))                  
                :type "class")
                nil [2897 3386])
            ("GuardCondition" type
               (:template 
                  ( ("SM" type (:type "class") nil nil)
                    ("Data" type (:type "class") nil nil)
                    ("BOOL" type nil nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [3685 3692])
                    ("InvokeGuardCondition" function
                       (:methodconst-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("sm" variable
                               (:pointer 1
                                :type ("StateMachine" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3728 3745])
                            ("data" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("EventData" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3746 3768]))                          
                        :type ("BOOL" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3694 3989]))                  
                :superclasses 
                  ( ("GuardBase" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [3580 3992])
            ("EntryBase" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [4086 4093])
                    ("InvokeEntryAction" function
                       (:pure-virtual-flag t
                        :prototype-flag t
                        :methodconst-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("sm" variable
                               (:pointer 1
                                :type ("StateMachine" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4320 4337])
                            ("data" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("EventData" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4338 4360]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [4289 4371]))                  
                :type "class")
                nil [4068 4374])
            ("EntryAction" type
               (:template 
                  ( ("SM" type (:type "class") nil nil)
                    ("Data" type (:type "class") nil nil)
                    ("void" type nil nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [4667 4674])
                    ("InvokeEntryAction" function
                       (:methodconst-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("sm" variable
                               (:pointer 1
                                :type ("StateMachine" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4707 4724])
                            ("data" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("EventData" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4725 4747]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [4676 4961]))                  
                :superclasses 
                  ( ("EntryBase" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [4565 4964])
            ("ExitBase" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [5055 5062])
                    ("InvokeExitAction" function
                       (:pure-virtual-flag t
                        :prototype-flag t
                        :methodconst-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("sm" variable
                               (:pointer 1
                                :type ("StateMachine" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5247 5264]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [5217 5275]))                  
                :type "class")
                nil [5038 5278])
            ("ExitAction" type
               (:template 
                  ( ("SM" type (:type "class") nil nil)
                    ("void" type nil nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [5484 5491])
                    ("InvokeExitAction" function
                       (:methodconst-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("sm" variable
                               (:pointer 1
                                :type ("StateMachine" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5523 5540]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [5493 5645]))                  
                :superclasses 
                  ( ("ExitBase" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [5403 5648])
            ("StateMapRow" type
               (:members 
                  ( ("State" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("StateBase" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5738 5767]))                  
                :type "struct")
                nil [5716 5770])
            ("StateMapRowEx" type
               (:members 
                  ( ("State" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("StateBase" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5871 5900])
                    ("Guard" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("GuardBase" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5902 5931])
                    ("Entry" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("EntryBase" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5933 5962])
                    ("Exit" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("ExitBase" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5964 5991]))                  
                :type "struct")
                nil [5847 5994])
            ("StateMachine" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [6084 6091])
                    ("" type
                       (:members 
                          ( ("EVENT_IGNORED" variable
                               (:constant-flag t
                                :default-value (6116 6120)
                                :type "int")
                                (reparse-symbol enumsubparts) [6100 6120])
                            ("CANNOT_HAPPEN" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [6122 6137]))                          
                        :type "enum")
                        (reparse-symbol classsubparts) [6093 6138])
                    ("StateMachine" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("maxStates" variable (:type ("BYTE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6244 6259])
                            ("initialState" variable
                               (:default-value "0"
                                :type ("BYTE" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6260 6281]))                          
                        :type ("StateMachine" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6231 6283])
                    ("StateMachine" function
                       (:destructor-flag t
                        :typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [6286 6312])
                    ("GetCurrentState" function (:type ("BYTE" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6400 6449])
                    ("GetMaxStates" function (:type ("BYTE" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6553 6595])
                    ("protected" label nil (reparse-symbol classsubparts) [6597 6607])
                    ("ExternalEvent" function
                       (:prototype-flag t
                        :arguments 
                          ( ("newState" variable (:type ("BYTE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6790 6804])
                            ("pData" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "NULL"
                                :type ("EventData" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6805 6834]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [6771 6836])
                    ("InternalEvent" function
                       (:prototype-flag t
                        :arguments 
                          ( ("newState" variable (:type ("BYTE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7098 7112])
                            ("pData" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "NULL"
                                :type ("EventData" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7113 7142]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [7079 7144])
                    ("private" label nil (reparse-symbol classsubparts) [7146 7154])
                    ("MAX_STATES" variable
                       (:constant-flag t
                        :type ("BYTE" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7205 7227])
                    ("m_currentState" variable (:type ("BYTE" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7268 7288])
                    ("m_newState" variable (:type ("BYTE" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7354 7370])
                    ("m_eventGenerated" variable (:type ("BOOL" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7418 7440])
                    ("m_pEventData" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("EventData" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7478 7508])
                    ("GetStateMap" function
                       (:pure-virtual-flag t
                        :prototype-flag t
                        :pointer 1
                        :typemodifiers ("virtual")
                        :constant-flag t
                        :type ("StateMapRow" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7931 7976])
                    ("GetStateMapEx" function
                       (:pure-virtual-flag t
                        :prototype-flag t
                        :pointer 1
                        :typemodifiers ("virtual")
                        :constant-flag t
                        :type ("StateMapRowEx" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [8442 8491])
                    ("SetCurrentState" function
                       (:arguments 
                          ( ("newState" variable (:type ("BYTE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8587 8601]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [8566 8632])
                    ("StateEngine" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [8787 8792]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [8770 8793])
                    ("StateEngine" function
                       (:prototype-flag t
                        :arguments 
                          ( ("pStateMap" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("StateMapRow" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8812 8847]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [8795 8848])
                    ("StateEngine" function
                       (:prototype-flag t
                        :arguments 
                          ( ("pStateMapEx" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("StateMapRowEx" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8867 8906]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [8850 8907]))                  
                :type "class")
                nil [6063 8910])
            ("STATE_DECLARE" variable (:constant-flag t) nil [8920 8933])
            ("STATE_DEFINE" variable (:constant-flag t) nil [9103 9115])
            ("GUARD_DECLARE" variable (:constant-flag t) nil [9221 9234])
            ("GUARD_DEFINE" variable (:constant-flag t) nil [9407 9419])
            ("ENTRY_DECLARE" variable (:constant-flag t) nil [9525 9538])
            ("ENTRY_DEFINE" variable (:constant-flag t) nil [9708 9720])
            ("EXIT_DECLARE" variable (:constant-flag t) nil [9826 9838])
            ("EXIT_DEFINE" variable (:constant-flag t) nil [9969 9980])
            ("BEGIN_TRANSITION_MAP" variable (:constant-flag t) nil [10056 10076])
            ("TRANSITION_MAP_ENTRY" variable (:constant-flag t) nil [10129 10149])
            ("END_TRANSITION_MAP" variable (:constant-flag t) nil [10178 10196])
            ("PARENT_TRANSITION" variable (:constant-flag t) nil [10396 10413])
            ("BEGIN_STATE_MAP" variable (:constant-flag t) nil [10557 10572])
            ("STATE_MAP_ENTRY" variable (:constant-flag t) nil [10747 10762])
            ("END_STATE_MAP" variable (:constant-flag t) nil [10796 10809])
            ("BEGIN_STATE_MAP_EX" variable (:constant-flag t) nil [10926 10944])
            ("STATE_MAP_ENTRY_EX" variable (:constant-flag t) nil [11121 11139])
            ("STATE_MAP_ENTRY_ALL_EX" variable (:constant-flag t) nil [11186 11208])
            ("END_STATE_MAP_EX" variable (:constant-flag t) nil [11310 11326]))          
      :file "StateMachine.h"
      :pointmax 11466
      :fsize 11465
      :lastmodtime '(23442 32545 903750 175000)
      :unmatched-syntax nil
      :lexical-table 
        '(("_STATE_MACHINE_H")
          ("END_STATE_MAP" . 
              ((close-paren "}" 10816 . 10817) (punctuation ";" 10817 . 10818) (symbol "C_ASSERT" 10822 . 10830) (semantic-list "((sizeof(STATE_MAP)/sizeof(StateMapRow)) == ST_MAX_STATES)" 10830 . 10888) (punctuation ";" 10888 . 10889) (RETURN "return" 10893 . 10899) (punctuation "&" 10900 . 10901) (symbol "STATE_MAP" 10901 . 10910) (semantic-list "[0]" 10910 . 10913) (punctuation ";" 10913 . 10914) (close-paren "}" 10915 . 10916)))
          ("ENTRY_DECLARE" (spp-arg-list ("stateMachine" "entryName" "eventData") 9538 . 9574) . 
              ((VOID "void" 9578 . 9582) (spp-symbol-merge ((symbol "EN_" 9583 . 9586) (symbol "entryName" 9588 . 9597)) 9583 . 9597) (semantic-list "(const eventData*)" 9597 . 9615) (punctuation ";" 9615 . 9616) (symbol "EntryAction" 9620 . 9631) (punctuation "<" 9631 . 9632) (symbol "stateMachine" 9632 . 9644) (punctuation "," 9644 . 9645) (symbol "eventData" 9646 . 9655) (punctuation "," 9655 . 9656) (punctuation "&" 9657 . 9658) (symbol "stateMachine" 9658 . 9670) (punctuation ":" 9670 . 9671) (punctuation ":" 9671 . 9672) (spp-symbol-merge ((symbol "EN_" 9672 . 9675) (symbol "entryName" 9677 . 9686)) 9672 . 9686) (punctuation ">" 9686 . 9687) (symbol "entryName" 9688 . 9697) (punctuation ";" 9697 . 9698)))
          ("ENTRY_DEFINE" (spp-arg-list ("stateMachine" "entryName" "eventData") 9720 . 9756) . 
              ((VOID "void" 9760 . 9764) (symbol "stateMachine" 9765 . 9777) (punctuation ":" 9777 . 9778) (punctuation ":" 9778 . 9779) (spp-symbol-merge ((symbol "EN_" 9779 . 9782) (symbol "entryName" 9784 . 9793)) 9779 . 9793) (semantic-list "(const eventData* data)" 9793 . 9816)))
          ("PARENT_TRANSITION" (spp-arg-list ("state") 10413 . 10420) . 
              ((IF "if" 10424 . 10426) (semantic-list "(GetCurrentState() >= ST_MAX_STATES && \\
		GetCurrentState() < GetMaxStates())" 10427 . 10505) (semantic-list "{ \\
		ExternalEvent(state); \\
		return; }" 10506 . 10547)))
          ("GUARD_DECLARE" (spp-arg-list ("stateMachine" "guardName" "eventData") 9234 . 9270) . 
              ((symbol "BOOL" 9274 . 9278) (spp-symbol-merge ((symbol "GD_" 9279 . 9282) (symbol "guardName" 9284 . 9293)) 9279 . 9293) (semantic-list "(const eventData*)" 9293 . 9311) (punctuation ";" 9311 . 9312) (symbol "GuardCondition" 9316 . 9330) (punctuation "<" 9330 . 9331) (symbol "stateMachine" 9331 . 9343) (punctuation "," 9343 . 9344) (symbol "eventData" 9345 . 9354) (punctuation "," 9354 . 9355) (punctuation "&" 9356 . 9357) (symbol "stateMachine" 9357 . 9369) (punctuation ":" 9369 . 9370) (punctuation ":" 9370 . 9371) (spp-symbol-merge ((symbol "GD_" 9371 . 9374) (symbol "guardName" 9376 . 9385)) 9371 . 9385) (punctuation ">" 9385 . 9386) (symbol "guardName" 9387 . 9396) (punctuation ";" 9396 . 9397)))
          ("EXIT_DEFINE" (spp-arg-list ("stateMachine" "exitName") 9980 . 10004) . 
              ((VOID "void" 10008 . 10012) (symbol "stateMachine" 10013 . 10025) (punctuation ":" 10025 . 10026) (punctuation ":" 10026 . 10027) (spp-symbol-merge ((symbol "EX_" 10027 . 10030) (symbol "exitName" 10032 . 10040)) 10027 . 10040) (semantic-list "(void)" 10040 . 10046)))
          ("STATE_DECLARE" (spp-arg-list ("stateMachine" "stateName" "eventData") 8933 . 8969) . 
              ((VOID "void" 8973 . 8977) (spp-symbol-merge ((symbol "ST_" 8978 . 8981) (symbol "stateName" 8983 . 8992)) 8978 . 8992) (semantic-list "(const eventData*)" 8992 . 9010) (punctuation ";" 9010 . 9011) (symbol "StateAction" 9015 . 9026) (punctuation "<" 9026 . 9027) (symbol "stateMachine" 9027 . 9039) (punctuation "," 9039 . 9040) (symbol "eventData" 9041 . 9050) (punctuation "," 9050 . 9051) (punctuation "&" 9052 . 9053) (symbol "stateMachine" 9053 . 9065) (punctuation ":" 9065 . 9066) (punctuation ":" 9066 . 9067) (spp-symbol-merge ((symbol "ST_" 9067 . 9070) (symbol "stateName" 9072 . 9081)) 9067 . 9081) (punctuation ">" 9081 . 9082) (symbol "stateName" 9083 . 9092) (punctuation ";" 9092 . 9093)))
          ("EXIT_DECLARE" (spp-arg-list ("stateMachine" "exitName") 9838 . 9862) . 
              ((VOID "void" 9866 . 9870) (spp-symbol-merge ((symbol "EX_" 9871 . 9874) (symbol "exitName" 9876 . 9884)) 9871 . 9884) (semantic-list "(void)" 9884 . 9890) (punctuation ";" 9890 . 9891) (symbol "ExitAction" 9895 . 9905) (punctuation "<" 9905 . 9906) (symbol "stateMachine" 9906 . 9918) (punctuation "," 9918 . 9919) (punctuation "&" 9920 . 9921) (symbol "stateMachine" 9921 . 9933) (punctuation ":" 9933 . 9934) (punctuation ":" 9934 . 9935) (spp-symbol-merge ((symbol "EX_" 9935 . 9938) (symbol "exitName" 9940 . 9948)) 9935 . 9948) (punctuation ">" 9948 . 9949) (symbol "exitName" 9950 . 9958) (punctuation ";" 9958 . 9959)))
          ("STATE_MAP_ENTRY" (spp-arg-list ("stateName") 10762 . 10773) . ((symbol "stateName" 10776 . 10785) (punctuation "," 10785 . 10786)))
          ("END_TRANSITION_MAP" (spp-arg-list ("data") 10196 . 10202) . 
              ((close-paren "}" 10209 . 10210) (punctuation ";" 10210 . 10211) (symbol "ASSERT_TRUE" 10214 . 10225) (semantic-list "(GetCurrentState() < ST_MAX_STATES)" 10225 . 10260) (punctuation ";" 10260 . 10261) (symbol "ExternalEvent" 10268 . 10281) (semantic-list "(TRANSITIONS[GetCurrentState()], data)" 10281 . 10319) (punctuation ";" 10319 . 10320) (symbol "C_ASSERT" 10324 . 10332) (semantic-list "((sizeof(TRANSITIONS)/sizeof(BYTE)) == ST_MAX_STATES)" 10332 . 10385) (punctuation ";" 10385 . 10386)))
          ("BEGIN_STATE_MAP_EX" . 
              ((PRIVATE "private" 10948 . 10955) (punctuation ":" 10955 . 10956) (VIRTUAL "virtual" 10959 . 10966) (CONST "const" 10967 . 10972) (symbol "StateMapRow" 10973 . 10984) (punctuation "*" 10984 . 10985) (symbol "GetStateMap" 10986 . 10997) (semantic-list "()" 10997 . 10999) (semantic-list "{ return NULL; }" 11000 . 11016) (VIRTUAL "virtual" 11019 . 11026) (CONST "const" 11027 . 11032) (symbol "StateMapRowEx" 11033 . 11046) (punctuation "*" 11046 . 11047) (symbol "GetStateMapEx" 11048 . 11061) (semantic-list "()" 11061 . 11063) (open-paren "{" 11064 . 11065) (STATIC "static" 11069 . 11075) (CONST "const" 11076 . 11081) (symbol "StateMapRowEx" 11082 . 11095) (symbol "STATE_MAP" 11096 . 11105) (semantic-list "[]" 11105 . 11107) (punctuation "=" 11108 . 11109) (open-paren "{" 11110 . 11111)))
          ("STATE_DEFINE" (spp-arg-list ("stateMachine" "stateName" "eventData") 9115 . 9151) . 
              ((VOID "void" 9155 . 9159) (symbol "stateMachine" 9160 . 9172) (punctuation ":" 9172 . 9173) (punctuation ":" 9173 . 9174) (spp-symbol-merge ((symbol "ST_" 9174 . 9177) (symbol "stateName" 9179 . 9188)) 9174 . 9188) (semantic-list "(const eventData* data)" 9188 . 9211)))
          ("TRANSITION_MAP_ENTRY" (spp-arg-list ("entry") 10149 . 10156) . ((symbol "entry" 10162 . 10167) (punctuation "," 10167 . 10168)))
          ("BEGIN_STATE_MAP" . 
              ((PRIVATE "private" 10576 . 10583) (punctuation ":" 10583 . 10584) (VIRTUAL "virtual" 10587 . 10594) (CONST "const" 10595 . 10600) (symbol "StateMapRowEx" 10601 . 10614) (punctuation "*" 10614 . 10615) (symbol "GetStateMapEx" 10616 . 10629) (semantic-list "()" 10629 . 10631) (semantic-list "{ return NULL; }" 10632 . 10648) (VIRTUAL "virtual" 10651 . 10658) (CONST "const" 10659 . 10664) (symbol "StateMapRow" 10665 . 10676) (punctuation "*" 10676 . 10677) (symbol "GetStateMap" 10678 . 10689) (semantic-list "()" 10689 . 10691) (open-paren "{" 10692 . 10693) (STATIC "static" 10697 . 10703) (CONST "const" 10704 . 10709) (symbol "StateMapRow" 10710 . 10721) (symbol "STATE_MAP" 10722 . 10731) (semantic-list "[]" 10731 . 10733) (punctuation "=" 10734 . 10735) (open-paren "{" 10736 . 10737)))
          ("GUARD_DEFINE" (spp-arg-list ("stateMachine" "guardName" "eventData") 9419 . 9455) . 
              ((symbol "BOOL" 9459 . 9463) (symbol "stateMachine" 9464 . 9476) (punctuation ":" 9476 . 9477) (punctuation ":" 9477 . 9478) (spp-symbol-merge ((symbol "GD_" 9478 . 9481) (symbol "guardName" 9483 . 9492)) 9478 . 9492) (semantic-list "(const eventData* data)" 9492 . 9515)))
          ("STATE_MAP_ENTRY_ALL_EX" (spp-arg-list ("stateName" "guardName" "entryName" "exitName") 11208 . 11251) . ((semantic-list "{ stateName, guardName, entryName, exitName }" 11254 . 11299) (punctuation "," 11299 . 11300)))
          ("END_STATE_MAP_EX" . 
              ((close-paren "}" 11333 . 11334) (punctuation ";" 11334 . 11335) (symbol "C_ASSERT" 11339 . 11347) (semantic-list "((sizeof(STATE_MAP)/sizeof(StateMapRowEx)) == ST_MAX_STATES)" 11347 . 11407) (punctuation ";" 11407 . 11408) (RETURN "return" 11414 . 11420) (punctuation "&" 11421 . 11422) (symbol "STATE_MAP" 11422 . 11431) (semantic-list "[0]" 11431 . 11434) (punctuation ";" 11434 . 11435) (close-paren "}" 11436 . 11437)))
          ("BEGIN_TRANSITION_MAP" . 
              ((STATIC "static" 10083 . 10089) (CONST "const" 10090 . 10095) (symbol "BYTE" 10096 . 10100) (symbol "TRANSITIONS" 10101 . 10112) (semantic-list "[]" 10112 . 10114) (punctuation "=" 10115 . 10116) (open-paren "{" 10117 . 10118)))
          ("STATE_MAP_ENTRY_EX" (spp-arg-list ("stateName") 11139 . 11150) . ((semantic-list "{ stateName, 0, 0, 0 }" 11153 . 11175) (punctuation "," 11175 . 11176)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("_DATA_TYPES_H" variable (:constant-flag t) nil [31 44])
            ("INT8" type
               (:typedef ("signed char")
                :type "typedef")
                nil [85 110])
            ("UINT8" type
               (:typedef ("unsigned char")
                :type "typedef")
                nil [112 140])
            ("INT16" type
               (:typedef ("signed short")
                :type "typedef")
                nil [142 169])
            ("UINT16" type
               (:typedef ("unsigned short")
                :type "typedef")
                nil [171 201])
            ("UINT32" type
               (:typedef ("unsigned int")
                :type "typedef")
                nil [203 231])
            ("INT32" type
               (:typedef ("int")
                :type "typedef")
                nil [233 251])
            ("CHAR" type
               (:typedef ("char")
                :type "typedef")
                nil [253 271])
            ("SHORT" type
               (:typedef ("short")
                :type "typedef")
                nil [273 293])
            ("LONG" type
               (:typedef ("long")
                :type "typedef")
                nil [295 313])
            ("INT" type
               (:typedef ("int")
                :type "typedef")
                nil [315 331])
            ("UINT" type
               (:typedef ("unsigned int")
                :type "typedef")
                nil [333 359])
            ("DWORD" type
               (:typedef ("unsigned long")
                :type "typedef")
                nil [361 389])
            ("BYTE" type
               (:typedef ("unsigned char")
                :type "typedef")
                nil [391 418])
            ("WORD" type
               (:typedef ("unsigned short")
                :type "typedef")
                nil [420 448])
            ("FLOAT" type
               (:typedef ("float")
                :type "typedef")
                nil [450 470])
            ("DOUBLE" type
               (:typedef ("double")
                :type "typedef")
                nil [472 494])
            ("BOOL" type
               (:typedef ("bool")
                :type "typedef")
                nil [496 514])
            ("NULL" variable (:constant-flag t) nil [559 563])
            ("FALSE" variable (:constant-flag t) nil [646 651])
            ("TRUE" variable (:constant-flag t) nil [700 704]))          
      :file "DataTypes.h"
      :pointmax 745
      :fsize 744
      :lastmodtime '(23442 32545 903750 175000)
      :unmatched-syntax nil
      :lexical-table 
        '(("TRUE" . ((number "1" 720 . 721)))
          ("NULL" . ((number "0" 567 . 568)))
          ("FALSE" . ((number "0" 666 . 667)))
          ("_DATA_TYPES_H")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("_FAULT_H" variable (:constant-flag t) nil [26 34])
            ("DataTypes.h" include nil nil [36 58])
            ("FaultHandler" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("file" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [727 744])
                    ("line" variable (:type "unsigned short") (reparse-symbol arg-sub-list) [745 765]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [709 766])
            ("ASSERT_TRUE" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [389 400])
            ("ASSERT" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [318 324])
            ("C_ASSERT" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [248 256]))          
      :file "Fault.h"
      :pointmax 804
      :fsize 803
      :lastmodtime '(23442 32545 903750 175000)
      :unmatched-syntax nil
      :lexical-table 
        '(("ASSERT_TRUE" (spp-arg-list ("condition") 400 . 411) . 
              ((DO "do" 415 . 417) (semantic-list "{if (!(condition)) FaultHandler(__FILE__, (unsigned short) __LINE__);}" 418 . 488) (WHILE "while" 489 . 494) (semantic-list "(0)" 495 . 498)))
          ("_FAULT_H")
          ("C_ASSERT" (spp-arg-list ("expr") 256 . 262) . ((semantic-list "{char uname[(expr)?1:-1];uname[0]=0;}" 264 . 301)))
          ("ASSERT" (spp-arg-list nil 324 . 326) . ((symbol "FaultHandler" 330 . 342) (semantic-list "(__FILE__, (unsigned short) __LINE__)" 342 . 379)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("GestureConfig.h" include nil nil [1 27])
            ("gestureConfig" variable (:type ("GestureConfig" type (:type "class") nil nil)) nil [28 56])
            ("configureGestures" function
               (:parent "GestureConfig"
                :arguments 
                  ( ("dLeftMin" variable (:type "double") (reparse-symbol arg-sub-list) [95 111])
                    ("maxLeftX" variable (:type "double") (reparse-symbol arg-sub-list) [112 128])
                    ("minLeftX" variable (:type "double") (reparse-symbol arg-sub-list) [129 145])
                    ("dThreshold" variable (:type "double") (reparse-symbol arg-sub-list) [146 164])
                    ("sobelThreshold" variable (:type "double") (reparse-symbol arg-sub-list) [165 187])
                    ("earThreshold" variable (:type "double") (reparse-symbol arg-sub-list) [188 208])
                    ("dPeakTime" variable (:type "int") (reparse-symbol arg-sub-list) [209 223]))                  
                :type "void")
                nil [57 444]))          
      :file "GestureConfig.cpp"
      :pointmax 445
      :fsize 444
      :lastmodtime '(23479 20946 818213 486000)
      :unmatched-syntax nil))
  :file "!home!fuzie!Documents!Enable!src!DetectGestures!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
