#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

###################################################################################
# Screen toggle                                                                   #
# A program to toggle a screen on or off nicely by fading in or out using         #
# xbacklight.	                                                                  #
# argument 1 - screen name						          #
# expected input/output: only takes one argument which is the screen to be 	  #
#                        toggled. If no name is passed the default screen will be #
#                        fetched and used.					  #
# example suggested usage: ./screen-toggle					  #
###################################################################################

wait_for_user(){
    # Wait for user to interact with computer
    while [ "$USER_IDLE_TIME" -gt 500 ]; do
	sleep 0.6
	USER_IDLE_TIME=$(xprintidle)
    done
}

##########################################################################
# Actual script                                                          #
##########################################################################
# Fetch screen if not provided by the user
if [ "$#" -eq "0" ]; then
    PRIMARY_OUTPUT=$(xrandr | awk '/primary/ {print $1}')
    INTERNAL_OUTPUT=$PRIMARY_OUTPUT	#
else
    INTERNAL_OUTPUT=$1
fi

# set user idle time to be used in loop
USER_IDLE_TIME=501

# Check if default screen is on/off to determine if it should go off/on
if xrandr | awk '/primary/ {print $1}'
then
    # turn_off
    current_brightness=$(xbacklight)
    xbacklight -set 0
    sleep 1
    xset dpms force off &

    # Wait for user interaction
    wait_for_user

    # Turn screen back on to same brightness
    xbacklight -time 300 -set "$current_brightness"
else
    xbacklight -set 50
    turn_on
fi

exit 0
