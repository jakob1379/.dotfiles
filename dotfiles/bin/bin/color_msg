#!/usr/bin/env python
import sys
import argparse

def nice_string_output(names, values, extra_spacing=2):
    """ Formats input to a left/right aligned string with decimal and space
    control.

    :param names: list of strings
    :param values: list of values corresponding to each name
    :param extra_spacing: space between names and values
    :param float_decimal: how many decimals to include
    :returns: formated string
    :rtype: string

    """

    values = [f"{i:.3}" for i in values]
    max_values = len(max(values, key=len))
    max_names = len(max(names, key=len))
    string = ""
    for name, value in zip(names, values):
        string += "{0:s} {1:>{spacing}} \n".format(
            name, value,
            spacing=extra_spacing + max_values + max_names - len(name))
    return string.strip()

def list_colors():
    print(nice_string_output(colors.keys(), colors.values()))
    sys.exit()

parser = argparse.ArgumentParser(description="A simple program to add color codes to strings")
parser.add_argument('string', help="String to be converted", nargs='?')
parser.add_argument('color', help="Color of the string", nargs='?')
parser.add_argument("-l", "--list-colors",
                    help="List available colors",
                    action='store_true')
args = parser.parse_args()


colors = dict(
    black="0;30",
    dark_gray="1;30",
    blue="0;34",
    light_blue="1;34",
    green="0;32",
    light_green="1;32",
    cyan="0;36",
    light_cyan="1;36",
    red="0;31",
    light_red="1;31",
    purple="0;35",
    light_purple="1;35",
    brown="0;33",
    yellow="1;33",
    light_gray="0;37",
    white="1;37")


if __name__ == '__main__':
    # List colors if flag is set
    if args.list_colors:
        list_colors()

    if not args.string and not args.color:
        num_args = str(len(sys.argv))
        raise SyntaxError(num_args + " provided, but exactly 2 are needed")

    # check if specified color is available
    if args.color.lower() not in colors.keys():
        print(args.color + " is not available")
        print("Choose a color from the list...")
        list_colors()

    print("\e[" + colors[args.color] + 'm' + args.string + "\e[0m")
