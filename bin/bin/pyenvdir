#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

displayUsage() {
    echo '
An extension for pyenv virtualenv to instantiate a virtual environment and
association of the local folder with the same virtual environment
usage:  pyenvdir [pyver] <name>
operations:
    pyenvdir {-h help}    shows shis dialogue
    pyenvdir {-l list}    list available python versions
    pyenvdir {-p version} python version to use e.g. 3.7.5
'
}

# Set defaults
PYVER=''

# Go through optional arguments
while getopts ":hlp:" opt; do
    case ${opt} in
	l)
	    pyenv versions
	    ;;
	p)
	    PYVER=${OPTARG}
	    ;;
	h)
	    displayUsage
	    exit 1
	    ;;
	\?)
	    echo "Invalid option: $OPTARG" 1>&2
	    displayUsage
	    exit 2
	    ;;
	:)
	    echo "Invalid option: $OPTARG requires an argument" 1>&2
	    exit 2
	    ;;
    esac
done
shift $(( OPTIND - 1 ))
OPTIND=1

# Check for mandatory arguments
if [ $# -lt 1 ]
then
    echo '
Not enough args provided. At least provide a name'
    displayUsage
fi

ENVNAME=$1

# init and associate pyenv virtualenv
pyenv virtualenv "$PYVER" "$ENVNAME"
pyenv local "$ENVNAME"
