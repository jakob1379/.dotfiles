;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("DetectFaces.h" include nil nil [1 25])
            ("dlib::con" variable (:type "int") nil [178 221])
            ("dlib::con" variable (:type "int") nil [280 323])
            ("dlib::relu" variable (:type "int") nil [372 490])
            ("dlib::relu" variable (:type "int") nil [532 575])
            ("dlib::loss_mmod" variable (:type "int") nil [594 724])
            ("facePredictor" variable (:type ("net_type" type (:type "class") nil nil)) nil [818 841])
            ("faceTracked" variable (:type ("cv::Rect2d" type (:type "class") nil nil)) nil [874 897])
            ("faceDetected" variable
               (:default-value "false"
                :type "bool")
                nil [898 924])
            ("debugImage" variable
               (:typemodifiers ("extern")
                :type ("cv::Mat" type (:type "class") nil nil))
                nil [925 951])
            ("faces" variable (:type ("std::vector" type
                 (:template-specifier 
                    ( ("dlib::rectangle" type nil nil nil))                    
                  :type "class")
                  nil nil)) nil [952 987])
            ("detector" variable
               (:default-value "dlib::get_frontal_face_detector()"
                :type ("dlib::frontal_face_detector" type (:type "class") nil nil))
                nil [989 1062])
            ("pose_model" variable (:type ("dlib::shape_predictor" type (:type "class") nil nil)) nil [1063 1096])
            ("initializeFaceDetector" function
               (:arguments 
                  ( ("PREDICTOR_NAME_FACE_DETECTOR" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1126 1167]))                  
                :type "void")
                nil [1098 1241])
            ("detectFaces" function
               (:arguments 
                  ( ("frame" variable (:type ("cv::Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1378 1392]))                  
                :type ("std::vector" type
                     (:template-specifier 
                        ( ("dlib::rectangle" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [1337 1973])
            ("FaceDetect" function
               (:arguments 
                  ( ("frame" variable (:type ("cv::Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2015 2029]))                  
                :type ("std::vector" type
                     (:template-specifier 
                        ( ("dlib::rectangle" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [1975 2261])
            ("DNNFaceDetect" function
               (:arguments 
                  ( ("frame" variable (:type ("cv::Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2401 2415]))                  
                :type ("std::vector" type
                     (:template-specifier 
                        ( ("dlib::rectangle" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [2358 3399])
            ("faceTrackerSuccess" function
               (:arguments 
                  ( ("frame" variable (:type ("cv::Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3663 3677])
                    ("face" variable (:type ("cv::Rect" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3678 3692]))                  
                :type "bool")
                nil [3639 3806]))          
      :file "DetectFaces.cpp"
      :pointmax 3807
      :fsize 3806
      :lastmodtime '(23449 65405 748222 228000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("DETECTFACES_H" variable (:constant-flag t) nil [31 44])
            ("opencv2/opencv.hpp" include (:system-flag t) nil [45 74])
            ("dlib/image_processing.h" include (:system-flag t) nil [75 109])
            ("dlib/opencv/cv_image.h" include (:system-flag t) nil [110 143])
            ("dlib/dnn.h" include (:system-flag t) nil [144 165])
            ("math.h" include (:system-flag t) nil [200 217])
            ("dlib/image_processing/frontal_face_detector.h" include (:system-flag t) nil [218 274])
            ("dlib/gui_widgets.h" include (:system-flag t) nil [275 304])
            ("dlib/image_io.h" include (:system-flag t) nil [305 331])
            ("../helpers.h" include nil nil [332 355])
            ("dlibRectangleToOpenCV" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("dlib::rectangle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [408 424]))                  
                :type ("cv::Rect" type (:type "class") nil nil))
                nil [377 425])
            ("initializeFaceTracker" function
               (:prototype-flag t
                :arguments 
                  ( ("frame" variable (:type ("cv::Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [453 467])
                    ("face" variable (:type ("cv::Rect" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [468 482]))                  
                :type "void")
                nil [426 483])
            ("faceTrackerSuccess" function
               (:prototype-flag t
                :arguments 
                  ( ("frame" variable (:type ("cv::Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [508 522])
                    ("face" variable (:type ("cv::Rect" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [523 537]))                  
                :type "bool")
                nil [484 538])
            ("openCVRectToDlib" function
               (:prototype-flag t
                :arguments 
                  ( ("r" variable (:type ("cv::Rect" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [572 583]))                  
                :type ("dlib::rectangle" type (:type "class") nil nil))
                nil [539 584])
            ("DNNFaceDetect" function
               (:prototype-flag t
                :arguments 
                  ( ("frame" variable (:type ("cv::Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [628 642]))                  
                :type ("std::vector" type
                     (:template-specifier 
                        ( ("dlib::rectangle" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [585 643])
            ("FaceDetect" function
               (:prototype-flag t
                :arguments 
                  ( ("frame" variable (:type ("cv::Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [684 698]))                  
                :type ("std::vector" type
                     (:template-specifier 
                        ( ("dlib::rectangle" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [644 699])
            ("detectFaces" function
               (:prototype-flag t
                :arguments 
                  ( ("frame" variable (:type ("cv::Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [743 757]))                  
                :type ("std::vector" type
                     (:template-specifier 
                        ( ("dlib::rectangle" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [702 758])
            ("initializeFaceDetector" function
               (:prototype-flag t
                :arguments 
                  ( ("PREDICTOR_NAME_FACE_DETECTOR" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [787 828]))                  
                :type "void")
                nil [759 829]))          
      :file "DetectFaces.h"
      :pointmax 838
      :fsize 837
      :lastmodtime '(23446 16073 983168 136000)
      :unmatched-syntax nil
      :lexical-table 
        '(("DETECTFACES_H")
          )
))
  :file "!home!fuzie!Documents!Enable!src!DetectFaces!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
